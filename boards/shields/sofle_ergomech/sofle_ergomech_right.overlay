/*
 * Copyright (c) 2020 Ryan Cross
 *
 * SPDX-License-Identifier: MIT
 */

#include "sofle_ergomech.dtsi"

&default_transform {
    col-offset = <6>;
};

&kscan0 {
    col-gpios
        = <&pro_micro 10 GPIO_ACTIVE_HIGH>
        , <&pro_micro 16 GPIO_ACTIVE_HIGH>
        , <&pro_micro 14 GPIO_ACTIVE_HIGH>
        , <&pro_micro 15 GPIO_ACTIVE_HIGH>
        , <&pro_micro 18 GPIO_ACTIVE_HIGH>
        , <&pro_micro 19 GPIO_ACTIVE_HIGH>
        ;
};

&right_encoder {
    status = "okay";
};

// Link physical device to the split node defined in dtsi
&glidepoint_split {
    device = <&glidepoint0>;
};

// Define and enable physical device node
&pro_micro_i2c {
    status = "okay"; // Ensure I2C bus is enabled

    glidepoint0: glidepoint0@2a { // Use 0x2a address, glidepoint0 for peripheral
        compatible = "cirque,pinnacle";
        reg = <0x2a>; // Use address 0x2a
        status = "okay"; // Enable the device on this side
        dr-gpios = <&pro_micro 1 GPIO_ACTIVE_HIGH>; // Changed from pin 0 to pin 1 to avoid UART conflicts
        x-invert; // Invert X axis
        y-invert; // Invert Y axis to fix direction
        sensitivity = "2x"; // Reduced from 1x to 2x to decrease data volume
        
        // Enable absolute mode for gesture recognition
        absolute-mode;
        absolute-mode-scale-to-width = <1024>;
        absolute-mode-scale-to-height = <1024>;
    };
};
